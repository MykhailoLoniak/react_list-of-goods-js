{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALPHABET","SORT_BY_LENGTH","RESET","App","useState","sortFilter","setSortFilter","reverseOrder","setReverseOrder","visibleGoods","goods","sortedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","type","cn","onClick","JSON","stringify","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAmB,WACnBC,EAAiB,SACjBC,EAAQ,QAsBP,IAAMC,EAAM,WACjB,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACMC,EAvBR,SAA0BC,EAAOL,EAAYE,GAC3C,IAAMI,EAAW,YAAOD,GAgBxB,OAdAC,EAAYC,MAAK,SAACC,EAAOC,GACvB,OAAQT,GACN,KAAKL,EACH,OAAOa,EAAME,cAAcD,GAG7B,KAAKb,EACH,OAAOY,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAILT,EAA6BI,EAAYM,UAA1BN,EAMFO,CACnBnB,EACAM,EACAE,GAYF,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,CACZ,WAAYhB,IAAeL,GAC1B,kBACHsB,QAAS,kBAAMhB,EAAcN,IAL/B,iCAUA,wBACEoB,KAAK,SACLD,UAAWE,IAAG,CACZ,WAAYhB,IAAeJ,GAC1B,qBACHqB,QAAS,kBAAMhB,EAAcL,IAL/B,4BAUA,wBACEmB,KAAK,SACLD,UAAWE,IAAG,CACZ,YAAad,GACZ,qBACHe,QArCR,WACEd,GAAiBD,IA+Bb,qBAUCgB,KAAKC,UAAUf,KAAkBc,KAAKC,UAAUzB,GAC7C,GACA,wBACEqB,KAAK,SACLD,UAAWE,IAAG,CACZ,WAAYhB,IAAeH,GAC1B,oBACHoB,QA7CZ,WACEhB,EAAcJ,GACdM,GAAgB,IAsCR,sBAcN,6BACGC,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC/GjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.aae01178.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPHABET = 'alphabet';\nconst SORT_BY_LENGTH = 'length';\nconst RESET = 'reset';\n\nfunction getPreparedGoods(goods, sortFilter, reverseOrder) {\n  const sortedGoods = [...goods];\n\n  sortedGoods.sort((good1, good2) => {\n    switch (sortFilter) {\n      case SORT_BY_ALPHABET: {\n        return good1.localeCompare(good2);\n      }\n\n      case SORT_BY_LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  return !reverseOrder ? sortedGoods : sortedGoods.reverse();\n}\n\nexport const App = () => {\n  const [sortFilter, setSortFilter] = useState('');\n  const [reverseOrder, setReverseOrder] = useState(false);\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer,\n    sortFilter,\n    reverseOrder,\n  );\n\n  function toggleReverse() {\n    setReverseOrder(!reverseOrder);\n  }\n\n  function handleReset() {\n    setSortFilter(RESET);\n    setReverseOrder(false);\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn({\n            'is-light': sortFilter !== SORT_BY_ALPHABET,\n          }, 'button is-info')}\n          onClick={() => setSortFilter(SORT_BY_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn({\n            'is-light': sortFilter !== SORT_BY_LENGTH,\n          }, 'button is-success')}\n          onClick={() => setSortFilter(SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn({\n            'is-light': !reverseOrder,\n          }, 'button is-warning')}\n          onClick={toggleReverse}\n        >\n          Reverse\n        </button>\n\n        {JSON.stringify(visibleGoods) === JSON.stringify(goodsFromServer)\n          ? '' : (\n            <button\n              type=\"button\"\n              className={cn({\n                'is-light': sortFilter !== RESET,\n              }, 'button is-danger')}\n              onClick={handleReset}\n            >\n              Reset\n            </button>\n          )\n        }\n\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}